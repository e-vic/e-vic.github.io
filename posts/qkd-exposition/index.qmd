---
title: "A Brief Exposition on Quantum Key Rate Calculations and Optimisation"
date: "February 29, 2024"
author:
  - name: "Emma Hansen"
    affiliation: "University of British Columbia Department of Mathematics"
    roles: writing
    corresponding: true
bibliography: references.bib
callout-icon: false
# format: docx
#   pdf:
#     toc: true
#     pdf-engine: pdflatex
#   html:
#     embed-resources: true
#     code-background: true
    # code-fold: true
comments:
    hypothesis: true
execute:
  cache: true
#   freeze: true
fig-cap-location: margin
number-sections: true
toc: true
toc-location: left
abstract: |
  This excerpt, from the report I wrote for my candidacy exam, contains a brief description of quantum key distribution key rate calculations, and outlines one approach to solving for the key rate as a minimisation problem. 
---

$$
\renewcommand{\H}{\mathcal{H}}
\newcommand{\tr}{\textnormal{tr}\,}
\newcommand{\A}{\mathcal{A}}
\newcommand{\Ac}{\mathcal{A}^*}
\newcommand{\N}{\mathcal{N}}
\renewcommand{\P}{\mathcal{P}}
\newcommand{\Z}{\mathcal{Z}}
\newcommand{\G}{\mathcal{G}}
\newcommand{\D}{\mathcal{D}}
\newcommand{\st}{\hspace{0.7mm}\textnormal{s.t.}\hspace{0.7mm}}
\DeclareMathOperator*{\argmax}{arg\,max}
\DeclareMathOperator*{\argmin}{arg\,min}
\newcommand{\<}{\langle}
\renewcommand{\>}{\rangle}
\newcommand{\diag}{\textnormal{\textbf{diag}}}
\newcommand{\eigs}{\textnormal{\textbf{eigs}}}
\newcommand{\Diag}{\textnormal{\textbf{Diag}}}
\newcommand{\T}{^\textsf{T}}
\newcommand{\B}{\mathcal{B}}
\newcommand{\Bc}{\mathcal{B}^*}
\newcommand{\one}{\mathbf{1}}
\renewcommand{\phi}{\varphi}
$$

# Quantum Key Distribution
To begin talking about quantum key rates, we must first talk about quantum cryptography and quantum encryption schemes. By now, most people have probably heard at some point "quantum computers are going to be able to hack secure information in a fraction of the time of classical computers\", or "RSA encryption will be useless against quantum computers\", or something of the like. And, although it will be a while before quantum computers are powerful enough to pose a real threat to current encryption schemes, it's important to get ahead of the development and have quantum-safe encryption schemes ready to implement. Quantum key distribution (QKD) is just one of the many disciplines that provide a solution to the threat quantum computers pose to classical encryption [@Broadbent_Schaffner_2016].

As in classical encryption, quantum encryption schemes use an encryption *key* to distort information so that eavesdropper can't infer anything useful, and then use another key held by a trusted correspondent to decrypt the information. The discipline of quantum key distribution encompasses the creation of key distribution protocols, and the calculation of key rates for these protocols. QKD protocols are the processes used to create and distribute the keys between sender and receiver. To fully define a QKD protocol, you need to define the state of the qubits that Alice can prepare, methods Alice and Bob will use to measure the qubits, a potential third party Charlie to convey information to Alice and Bob, and the method through which Alice and Bob exchange information about their measurements [@Winick_Lütkenhaus_Coles_2018]. To analyse a protocol, you need to define a model for environment noise, and an attack method for Eve to use - these determine the quantum channel.

To build a concrete understanding of what a QKD protocol encompasses, we will go through a simple protocol as an example, the BB84 protocol (named after its inventors Charles Bennett and Gilles Brassard [@Bennett_Brassard_2014]). This description for this example is restated from Nielsen and Chuang *Quantum Computation and Quantum Information* [@Nielsen_Chuang_2012].

::: {#nte-bb84 .callout-note}
## BB84
Alice starts with two strings, $a$ and $b$, of $(4+\delta)n$ random classical bits (this is a very specific number, the reasoning behind it coming from the security proof). She then encodes the classical bits from string $a$ in qubits by choosing one of two spin bases (spin up/down - $X$, and spin diagonal - $Z$) determined by string $b$. This means each qubit is one of the following states 

$$\begin{aligned}
    &\ket{\phi_{00}} = \ket{0} = \left[\begin{array}{c}
         1 \\
         0 
    \end{array}\right], \
    \ket{\phi_{01}} = \ket{1} = \left[\begin{array}{c}
         0 \\
         1 
    \end{array}\right], \\ 
    &\ket{\phi_{10}} = \ket{+} = \frac{1}{\sqrt{2}}(\ket{0} + \ket{1}), \
    \ket{\phi_{11}} = \ket{-} = \frac{1}{\sqrt{2}}(\ket{0} - \ket{1}).
\end{aligned}$$ 

The labelling of the individual states indicates the value from string $a$ first, and the basis chosen as from string $b$ second, $\ket{\phi_{a_k b_k}}$. The complete state of Alice's system is given by the superposition of the states of the individual qubits, written as 

$$\begin{aligned}
    \ket{\phi} = \bigotimes_{k=1}^{(4+\delta)n} \ket{\phi_{a_k b_k}},
\end{aligned}$$ 

which is the notation for the tensor product of the individual state vectors.

Alice now sends $\ket{\phi}\bra{\phi}$ to Bob, which is the density matrix form of the state. Bob receives it in the form $\mathcal{E}(\ket{\phi}\bra{\phi})$, where $\mathcal{E}$ is the linear map describing the changes due to noise and interference by Eve. Bob then announces publicly that he has received the state, and measures in a randomly selected string of bases (either the $X$ or $Z$ basis) determined by his string $b'$, and stores the values in a string $a'$. In between all of this Eve has measured and re-sent qubits in her own randomly selected string of bases, if she guessed the wrong basis then the state will have been disturbed.

Alice now announces publicly what her basis string $b$ contained, and Alice and Bob both discard the elements of their strings $a$ and $a'$ for which Bob chose the wrong measurement basis (this is a type of *sifting* procedure). Assuming this leaves $2n$ bits remaining, Alice will now select $n$ of her remaining bits and announce the indices to Bob so they can publicly compare values and check for noise and interference. If more than $t$ bits differ, then they abort and re-try. The value $t$ is chosen so that they can then apply information reconciliation and privacy amplification to the remaining bits.
:::

The BB84 protocol is a type of "prepare and measure\" protocol, another popular type of protocol is entanglement-based, where Charlie prepares an bipartite entangled state and sends one part to Alice and one to Bob. For this report we will focus on prepare and measure protocols.

We now move on to the second part of QKD: the computation of key rates for distribution protocols. The key rate is what quantifies how much usable secret key is distributed by a given protocol, it is the number of established secret key bits divided by the number of distributed quantum systems (number of qubits) [@Coles_Metodiev_Lütkenhaus_2016]. Protocols with higher key rates are more desirable, so the ability to calculate a key rate for a distribution protocol is an important step in the development of new distribution protocols. Unfortunately (for quantum cryptographers, fortunately for me!) calculating the key rate is a pretty difficult problem. @Devetak_Winter_2005 developed a formula for the key rate given known states of Alice, Bob, and Eve, but computing the key rate with those parameters specified only gives part of the picture. In order to be sure the protocol will work under all circumstances (all possible joint states of Alice, Bob, and Eve), a worst case key rate is computed. This is an optimisation problem whose solution lower bounds all possible key rates for a given protocol.


The rest of this section contains descriptions of some of the quantum information theory concepts discussed, which will hopefully provide some foundation for your thoughts. It concludes with some notation.  




::: {.callout-tip collapse=true}
## A crash course in quantum states
The state of a qubit is represented by a length two vector written in bra-ket form, $\ket{v}$ - a "ket". For a general qubit, this is a superposition (linear combination) of the computational basis vectors 

$$\ket{0} = \left[ \begin{array}{c}
1\\ 
0 \end{array} \right], \ \ \ket{1} = \left[ \begin{array}{c}
0\\ 
1 \end{array} \right].$$

A single qubit state could look like $\ket{v} = \frac{1}{\sqrt{2}} \ket{0} + \frac{1}{\sqrt{2}} \ket{1}$. The coefficients of the states must satisfy $||\ket{v}|| = 1$, the squares of the coefficients are the probability that $\ket{v}$ is in the associated state. 

The state of a collection of qubits is called a quantum system or *register*, and is represented by the tensor product of the states of all the qubits in the system. For a system of $m$ qubits, this is $\ket{\phi} = \bigotimes_{i=1}^m \ket{a_i}$. If we take $m=2$, the computational basis is now

$$\ket{00} = \left[ \begin{array}{c}
1\\ 0 \\0\\0\end{array} \right], 
\ \ \ket{01} = \left[ \begin{array}{c}
0\\ 1 \\0\\0\end{array} \right], 
\ \ \ket{10} = \left[ \begin{array}{c}
0\\0 \\1\\0\end{array} \right], 
\ \ \ket{11} = \left[ \begin{array}{c}
0\\0\\0\\1\end{array} \right],$$

representing the possible combinations of the states of each qubit. 

The state of a quantum system is frequently represented by a density matrix, this is an $m\times m$ Hermitian matrix. To relate this to the representation of a state as a vector, we need to build a distinction between pure quantum states and mixed quantum states. 

A pure state is one whose density matrix can be written as an outer product of a single ket

$$\rho = \ket{\phi}\bra{\phi}.$$

Density matrices of pure states are rank 1. A mixed state is one whose density matrix cannot be written as a single outer product

$$\rho = \sum_{i=1}^n a_i \ket{\phi_i}\bra{\phi_i}. $$

The coefficients $a_i$ denote the probability with which the system is in state $\ket{\phi_i}$, and since the $\ket{\phi_i}$ are unit vectors the $a_i$ are the eigenvalues of $\rho$. For example, $\rho =  \ket{00}\bra{00}$ is a pure state, and $\sigma = \frac{1}{\sqrt{2}} \ket{00}\bra{00} + \frac{1}{\sqrt{2}} \ket{01}\bra{01}$ is a mixed state.  

Focussing now on pure states, let's say we have two registers, A and B, and denote states from these registers as $\ket{\phi}_A$ and $\ket{\phi}_B$ respectively. The joint state of A and B, call this AB, can be either separable or entangled. If the joint state is separable, it can be factored as 

$$\ket{\phi}_{AB} = \left(\sum_{i=1}^k \alpha_i\ket{\phi_i}_A + \beta_i\ket{\phi_i})_B \right)\otimes\left(\sum_{i=1}^k \alpha_i\ket{\phi_i}_A + \beta_i\ket{\phi_i})_B \right).$$

Note that a common shorthand for the tensor product of kets is $\ket{a}\otimes\ket{b} = \ket{a}\ket{b} = \ket{ab}$. If the joint state is entangled, then it can't be factored like that. For example, $\ket{\phi}_{AB} = \frac{1}{\sqrt{2}} (\ket{0_A 0_B} + \ket{1_A 1_B})$ is an entangled state and $\ket{\psi}_{AB} = \frac{1}{2}(\ket{0_A 0_B} + \ket{0_A 1_B} + \ket{1_A 0_B} + \ket{1_A 1_B})$ is a separable state because it can be factored: $\ket{\psi}_{AB} = \frac{1}{2}(\ket{0}_A + \ket{1}_A)(\ket{0}_B + \ket{1}_B)$.

Information in this note was collected from Joe Salfi's Introduction to Quantum Information and Computing course and Wikipedia (@Salfi-course_2023,@Qubit_2024,@Quantum-entanglement_2024).


:::

::: {.callout-tip collapse=true} 
## Measuring quantum systems

Measurement of quantum systems is characterized by projection operators. A projection operator is correlated with a measurement outcome, and the result of the measurement is the probability of obtaining said measurement outcome. Let's say we have a projection operator $P = \ket{00}\bra{00}$ corresponding to measurement outcome that both qubits are 0, then if we apply this to a state $\rho = \frac{1}{4} \ket{00}\bra{00} + \frac{3}{4} \ket{10}\bra{10}$, the result is $\frac{1}{4}$. Measurements can also be generalised to something called a positive operator-valued measure (POVM). A POVM is defined as a collection of positive semi-definite matrices $\{P_i\}$ that sum to the identity

$$\sum_{i=1}^k P_i = I.$$

Each POVM element $P_i$ corresponds to a measurement outcome indexed by $i$, and the result of the measurement gives the probability of obtaining outcome $i$

$$\text{Prob}(i) = \tr(\rho P_i).$$

Projection measurements can be used to determine the density matrix of an unknown quantum system $\sigma$. You can define the set of measurement operators to correspond to all possible states $\{\ket{\phi_i}\}_{i=1}^n$ the system could exist in, then the outcome of the measurement is the probability $p_i$ that the system is in state $\ket{\phi_i}$. Let $\sigma'$ denote the reconstructed system, it is defined as

$\sigma' = \sum_{i=1}^n p_i \ket{\phi_i}\bra{\phi_i}.$$


To provide the brain with something to hold onto while talking about "measuring" qubits, we describe, at a very high level, one method of doing so: spin selective tunnelling. 

While it is possible to measure the spin of a quantum particle, it is time consuming - but most encryption protocols use spin qubits, meaning fast and reliable measurement is necessary. Spin selective tunnelling is a method to determine particle spin by measuring a charge (which is much faster to do). Suppose you have a qubit of known spin in a two state reservoir (remembering from chemistry that particles like electrons can have different activation states), next to this reservoir you have a different one state reservoir with a qubit of unknown spin. Quantum chemistry dictates that it is much harder for a particle with the same direction spin to tunnel to the left, but particles with opposite spin can tunnel much easier. When a particle tunnels and changes state, a small charge is emitted, and this is what is measured. Whether or not a charge is detected will determine if the measurement is taken to be a 0 or a 1 (based on the spin of the known qubit).

::: wrapfigure
![](spinselect.jpg){width=30% .lightbox fig-align="center"}
:::
Information in this note was collected from Joe Salfi's Introduction to Quantum Information and Computing course and Wikipedia (@Salfi-course_2023,@Measurement-in-quantum-mechanics_2024).

:::


## Notation

- $\H^n$ is the set of $n\times n$ Hermitian matrices

- Let $X\in\H^n$ such that $X = V\Lambda V^*$, and $f:\mathbb{R}\rightarrow\mathbb{R}$ continuous, then we can define a spectral function $F:\H^n\rightarrow \H^n$ such that $F(X) = \sum_{i=1}^n f(\lambda_i) v_i v_i^*$.

- $S(X) = \tr(X\log X)$ is the negative quantum entropy

- $S(X|Y) = S(\rho^{AB})-S(\rho^B)$ is the quantum conditional entropy

- $S(X||Y) = \tr(X\log X - X\log Y)$ is the quantum relative entropy

- $s(x) = \sum_{i=1}^m x_i \log x_i$ is the negative classical entropy

- $s(x||y) = \sum_{i=1}^m x_i\log x_i - x_i \log y_i$ is the classical relative entropy, also called the KL divergence





# Formulating the key rate calculation
This section will go through how calculating the key rate can be written as a minimisation of relative entropy, which is the formulation presented by @Winick_Lütkenhaus_Coles_2018.

The expression for the key rate that Winick et al. use comes from Theorem 2.6 of @Devetak_Winter_2005, with the assumption that Eve possesses a purification of the joint state of Alice and Bob (this is a worst case scenario, where Eve has the most amount of information about Alice and Bob's systems). With this assumption about Eve's state, the key rate can be written as

$$ K = p_{\text{pass}} \cdot \left( S(Z^R|E\tilde{A}\tilde{B})_\rho - \text{leak} \right),$$

where $p_\text{pass}$ is the probability of passing the sifting step in the protocol, $Z^R$ is a register storing information about the key, $E\tilde{A}\tilde{B}$ is the joint state of Eve, the purified state of Alice, and the purified state of Bob, $\rho$ is the density matrix representing the joint state of $Z^R$ and $E\tilde{A}\tilde{B}$, and $\text{leak}$ is the number of bits of key map information that Eve learns through error correction. The specifics of purifications and the error correction process aren't included as they are beyond the scope of this project, which is concerned with the optimisation problem itself. 

Since only the conditional entropy term is dependent on $\rho$, when we minimise over all $\rho$ to determine the worst case key rate, the $\text{leak}$ term does not need to be included in the objective. Winick et al. first use a result from @Coles_2012 to transform the conditional entropy to a relative entropy in the form 

$$p_{\text{pass}} S(V\rho^{(3)}V^*||\Z(V\rho^{(3)}V^*)),$$

where $\rho^{(3)}$ is result of the key distribution protocol acting on the joint state of Alice and Bob, which is explained in more detail below. The map $\Z$ is a pinching, pinchings have the property that $||\Z(\rho)|| \leq ||\rho||$ for every unitarily invariant norm [@Bhatia_1997].

$V$ is an isometry which, when applied to $\rho^{(3)}$ stores the key information in a different register system $R$, and $\rho^{(3)}$ is 

$$\rho^{(3)} = \frac{\Pi \rho^{(2)} \Pi}{p_{\text{pass}}}.$$

Here, $\Pi$ is the projector defined to project to the subspace of announcements that Alice and Bob keep after sifting, $\rho^{(2)}$ is 

$$\rho^{(2)} = \A(\rho_{AB}),$$

where $\A$ is a completely positive trace-preserving map representing the changes that happen to Alice and Bob's joint state after passing through the quantum channel associated with Alice and Bob's respective measurements and announcements of said measurements.

::: {#tip-channels .callout-tip collapse="true"}
## Quantum Channels

A quantum channel can be thought of as a passage through which quantum particles pass to get from Alice to Bob, and in this passage effects from the environment and Eve affect the particles (these are modelled by Kraus operators). But, a quantum channel can also describe what happens to a quantum particle in a quantum computer, or what happens to quantum particles when any sort of operation is applied. *Quantum channel* is the terminology used to describe when a quantum particle undergoes a change or series of changes, and those changes are modelled by Kraus operators. 

One type of quantum channel, which will be used in @sec-bb84ex, is the depolarising channel. To talk about the depolarising channel, we need to introduce the Pauli gates/matrices. There are three Pauli matrices

$$X = \left[\begin{array}{cc} 0 & 1 \\ 1 & 0 \end{array} \right], \ Y = \left[\begin{array}{cc} 0 & -i \\ i & 0 \end{array} \right], \ Z = \left[\begin{array}{cc} 1 & 0 \\ 0 & -1 \end{array} \right].$$

Pauli $X$ is often called "bit flip", because when acting on a qubit state it will flip the position of the $0$ and $1$, causing the state to go from $\ket{0}$ to $\ket{1}$. Pauli $Z$ is often called "phase flip", because it only changes $\ket{1}$ to $-\ket{1}$, and doesn't change $\ket{0}$. The Pauli $Y$ doesn't have another name. 

Depolarising channels are used to model noise in quantum systems. They act linearly on the system state as

$$\mathcal{E}(\rho) = (1 - \frac{3}{4}p) \rho + \frac{p}{4}X \rho X^* + \frac{p}{4} Y \rho Y^* + \frac{p}{4} Z \rho Z^*, $$

where $p$ the probability that noise affects a change on the state  [@Salfi-course_2023;@Nielsen_Chuang_2012].

:::

The definitions of the operators $\Z$, $V$, $\Pi$, and $\A$ are

- $\Z(\sigma) = \sum_j (\ket{j}\bra{j}_R \otimes \mathbf{1}) \sigma (\ket{j}\bra{j}_R \otimes \mathbf{1})$. The $\ket{j}_R$ denote standard basis elements in the register $R$.

- $V = \sum_{(a,\alpha_a,b)} \ket{g(a,\alpha_a,b)}_R \otimes \ket{a}\bra{a}_{\tilde{A}} \otimes \ket{\alpha_a}\bra{\alpha_a}_{\bar{A}} \otimes \ket{b}\bra{b}_{\tilde{B}}$. Here $g(a,\alpha_a,b)$ is a "key map\", $(a,\alpha_a)$ are the outcome of Alice's measurements, $b$ is Bob's announcement, and the output of $g$ is a value in $\{0,1,...,N-1\}$, where $N$ is the number of key symbols. $\tilde{A}$ and $\tilde{B}$ are the registers that store Alice and Bob's public announcements, $a$ and $b$, respectively. $\bar{A}$ and $\bar{B}$ are registers that store Alice and Bob's measurement outcomes for a given announcement, $\alpha_a$ and $\beta_b$, respectively. When applied as a similarity transform on a state $\rho$, it stores the key information of $\rho$ in the standard basis of $R$.

- $\Pi = \sum_{(a,b)\in A} \ket{a}\bra{a}_{\tilde{A}} \otimes \ket{b}\bra{b}_{\tilde{B}}$. $A$ is the set/register of announcements that are kept.

- $\A(\rho) = \sum_{a,b} (K_a^A\otimes K_b^B)\rho (K_a^A\otimes K_b^B)^*$. $K_a^A$ and $K_b^B$ are Kraus operators, which are composed of operators representing different actions of a quantum channel on a quantum state. 
    - $K_a^A = \sum_{\alpha_a} \sqrt{P^A_{(a,\alpha_a)}} \otimes \ket{a}_{\tilde{A}} \otimes \ket{\alpha_a}_{\bar{A}}$ 
    - $K_b^B = \sum_{\alpha_b} \sqrt{P^B_{(b,\beta_b)}} \otimes \ket{b}_{\tilde{B}} \otimes \ket{\alpha_b}_{\bar{B}}$
    - The Kraus operators are built from POVMs, $P^A_{(a,\alpha_a)}$ and $P^B_{(b,\beta_b)}$, in this case the POVMs represent the possible measurement outcomes for Alice and Bob. 

Winick et al. then define an operator $\G$ that encompasses the changes to the state from $V$, $\Pi$, and $\A$

$$\G(\rho) =  V \Pi \A(\rho) \Pi V^*,$$

and use this to write the key rate calculation as 

$$\begin{aligned}
\begin{split}
    \min_\rho & \ S(\G(\rho)||\Z(\G(\rho))) \\
    \st & \ \Gamma(\rho) = \gamma, \\
    & \ \rho \succeq 0,
\end{split} 
\end{aligned}$$ {#eq-winickformulation}

where $\rho$ is used as a shorthand to denote $\rho_{AB}$, the joint system of Alice and Bob, and $\Gamma(\rho) = \{\tr(\Gamma_i \rho)\}_{i=1}^m$. Both the $\Gamma_i$ and $\gamma$ are determined from experimental data and help characterise the the density matrix $\rho$, which is unknown. 


This general form of the key rate calculation can be studied without needing the explicit definitions of $\Z$ and $\G$, just by knowing that they are both linear, and $\G$ is a completely positive map and $\Z$ is a completely positive trace-preserving map. As the matrix logarithm is evaluated on the eigenvalues of the matrix, both $\Z$ and $\G$ must map to full rank matrices. Additionally, we know this is a convex optimisation problem, since it is known that relative entropy is jointly convex [@Effros_2009;@Ebadian_Nikoufar_EshaghiGordji_2011].




## A solution approach by Winick et al.

Determining the key rate is an important step in analysing new key distribution protocols, and it is important that the key rate determined in the analysis is actually achievable. For that reason, Winick et al. chose to solve the problem via a dual method on the linearisation of the problem. By using a dual method, algorithmically the minimum (of the primal problem) is approached from below, assuring that the key rate is achievable. 

Their approach is broken down into two steps: (1) find a close-to-optimal eavesdropping attack, which results in an upper bound on the key rate, (2) convert the upper bound into a lower bound. 

**Step 1.** The first component of Step 1 is to write $\rho$ in a subspace representation, to include the constraints $\Gamma$ inherently in the variable. They apply the Gram-Schmidt process to the $\Gamma_i$ and create $\tilde{\Gamma}_i$, which is then extended to an orthonormal basis for $\H^n$ with matrices $\Omega_j$, $j=1,...,n-m$. The $\gamma_i$ are the expectation value of the $\Gamma_i$, so the expectation value for the orthonormalised $\tilde{\Gamma}_i$ will be $\tilde{\gamma}_i$. Now we can write the domain of the problem as 

$$ E = \{ \sum_{i=1}^m \tilde{\gamma}_i \tilde{\Gamma}_i + \sum_{j=1}^{n-m} \omega_j \Omega_j \mid \omega\in\mathbb{R}^{n-m}\},$$

where the $\tilde{\Gamma}_i$ span the subspace defined by the constraints, and the $\Omega_j$ span the free subspace. Now, variable is reduced to a vector in $\mathbb{R}^{n-m}$. With this framework, they adapt the Frank-Wolfe algorithm to minimise the unconstrained version of @eq-winickformulation. The minimising argument is a density matrix which represents a system state after a possibly worst case eavesdropping attack. The algorithm Winick et al. use is

::: wrapfigure
![Note: the algorithm is a screenshot from the Winick paper, I wasn't able to find a pseudocode format I was satisfied with before the submission deadline.](winickalg1.PNG){width=60% .lightbox}
:::

The notation is a little different, the differences are: their set $S$ is my set $E$, $f(\rho) = S(\G(\rho)||\Z(\G(\rho)))$. Line 2 is simply the semidefinite program

$$\begin{aligned}
\argmin_\omega & \sum_{j=1}^{n-m} \omega_j \tr(\Omega_j\T \nabla f(\rho_i)) \\
\st & \sum_{j=1}^{n-m} \omega_j \Omega_j + \rho_i \in \H^n,
\end{aligned}$$

since the only free variable is $\omega$, which is then used to construct $\Delta \rho = \sum_{j=1}^{n-m} \omega_j \Omega_j$.


**Step 2.** Let $\hat{\rho}$ be the minimising argument from Step 1, Step 2 starts with linearising $S(\G(\rho)||\Z(\G(\rho)))$ about $\hat{\rho}$. Due to numerical imprecision, $\hat{\rho}$ actually corresponds to a slight upper bound on the minimum, but we want the calculated key rate to actually be achievable. So, @Winick_Lütkenhaus_Coles_2018 determine the dual problem to the linearisation, and maximise that, thus resulting in a solution which is a lower bound to the primal problem. 

An open-source solver based on this method is available under the name [Open QKD Security](https://openqkdsecurity.wordpress.com/).




## Example: BB84 protocol {#sec-bb84ex}
This section will go through the first example in Appendix F of @Winick_Lütkenhaus_Coles_2018. The example follows the BB84 protocol described in @nte-bb84, where Bob's qubit detectors are not perfectly efficient. The experimentally determined constraints $\Gamma$ will be modelled by a depolarizing channel (see @tip-channels for an explanation of a depolarising channel).

As described above, we know that Alice and Bob's measurements of the qubits affect the state though the action of POVMs. Alice's POVMs model whether or not Alice will measure a qubit in the $z$-basis, and are written as 

$$\begin{aligned}
& P_1^A = p_z \ket{0}\bra{0}, \ P_2^A = p_z \ket{1}\bra{1}, \ P_3^A = (1-p_z) \ket{+}\bra{+}, \\ 
& P_4^A = (1-p_z) \ket{-}\bra{-},
\end{aligned}$$

where $p_z$ is the probability that Alice measures in the $z$-basis, and $\ket{\pm} = \frac{1}{\sqrt{2}} (\ket{0} \pm \ket{1})$.

::: { .callout-tip collapse="true"}
## $z$-basis and the Bloch sphere

The state of a qubit can be visualised as being on the unit sphere, called the Bloch sphere in quantum mechanics. 

::: wrapfigure
![](blochsphere.png){width=60% .lightbox fig-align="center"}
:::

In the Bloch sphere diagram above, from @ketterer-tel-01502539, the $x$-, $y$-, and $z$-axes are labelled with their corresponding bases. The poles of the Bloch sphere correspond to $\ket{0}$ and $\ket{1}$, which are called the $z$-basis. 

:::

Alice's system is modelled in qubits, but Bob's system will be modelled in qutrits (three bits), to account for the possibility that the qubit Alice sends just doesn't arrive, this is called a "no-click" event. Bob's POVMs are

$$\begin{aligned}
& P_1^B = p_z \ket{0}\bra{0} \oplus 0, \ P_2^B = p_z \eta \ket{1}\bra{1} \oplus 0, \ P_3^B = (1-p_z) \ket{+}\bra{+} \oplus 0, \\
& P_4^B \ket{-}\bra{-} \oplus 0, \ P_5^B = \one - \sum_{j=1}^4 P_j^B, 
\end{aligned}$$

where the $\oplus 0$ indicates the addition of a third bit set to $0$, and the factor $\eta$ represents detector inefficiency. The fifth POVM is the one representing a no-click event, in this case the third bit is set to $1$. 

The depolarising channel, which represents the environmental effects on the qubits, is modelled by the Kraus operators $\sqrt{1-\frac{3}{4}p} I$ (no change), $\sqrt{\frac{p}{4}} X$ (bit flip), $\sqrt{\frac{p}{4}} Y$ (bit flip with multiplication by $i$), and $\sqrt{\frac{p}{4}} Z$ (phase flip), $p$ is the depolarising probability. How the channel acts on a state is defined as 

$$ \mathcal{E}(\rho) = (1-\frac{3}{4}p) \rho + \frac{p}{4}X \rho X^* + \frac{p}{4} Y \rho Y^* + \frac{p}{4} Z \rho Z^*.$$

This depolarising channel is used to simulate the experimental data by applying it to a [maximally entangled state](https://en.wikipedia.org/wiki/Quantum_entanglement#Entangled_states) $\ket{\phi}$ to generate $\rho_\text{sim}$, which is then sampled by $\Gamma_{jk} = P_j^A\otimes P_k^B$ to generate the $\gamma_i$.

$$\begin{aligned}
& \rho_{\text{sim}} = (I \otimes \mathcal{E})(\ket{\phi}\bra{\phi}), \\
& \gamma_{jk} = \tr((P_j^A\otimes P_k^B)\rho_{\text{sim}}),
\end{aligned}$$

where $I$ (by my understanding) is the identity acting on the no-click qubit of Bob's state (@Renner_2008), $\ket{\phi}$ is length $6$, since a state vector of Alice and Bob's joint state would be the tensor product of a state from Alice and a state from Bob, resulting in a length $6$ vector. 

Calculating the Kraus operators is a straight forward application of the equation given before, so we move on to the definition of the projection operator that determines which measurements of Alice's and Bob's to keep. We want to make sure that only the measurements where Alice and Bob measure in the same basis are kept, that is, Alice measures $\ket{0}\bra{0}$ and Bob measures $\ket{0}\bra{0}$ OR Alice measures $\ket{1}\bra{1}$ and Bob measures $\ket{1}\bra{1}$. The projector is written as 

$$\Pi = \ket{0}\bra{0}_A \otimes \ket{0}\bra{0}_B + \ket{1}\bra{1}_A\otimes \ket{1}\bra{1}_B. $$

The last object to define is the isometry for the key map. It is defined such that Alice stores a 0 if she obtains outcome $P_1^A$ or $P3^A$, and stores a 1 if she obtains outcome $P_2^A$ or $P_4^A$, this is written as

$$ V = \ket{0}_R\otimes \ket{0}\bra{0}_A + \ket{1}_R\otimes \ket{1}\bra{1}_A,$$

where $R$ is the register of key values. 

With this, all components are defined to create the maps $\G$, $\Z$, and $\Gamma$ for the optimisation problem in @eq-winickformulation.



<!-- This is a nice example to show how an actual key distribution protocol can be used to generate the operators needed for key rate analysis, but it doesn't give an accurate representation of the size of a real-world key distribution protocol. With an actual implementation of a key distribution protocol, Alice would be sending Bob many qubits, enough so that even after sifting and error correction, bits remain. That would mean that if Alice sends $n$ qubits, her state would be length $2^n$ [@Scarani_Bechmann-Pasquinucci_Cerf_Dušek_Lütkenhaus_Peev_2009], and Bob's state would be length $3^n$, and the size of the density matrix for their joint system would be $(2^n 3^n)\times (2^n 3^n)$. Now considering the number of constraints. Let $m_A$ be the number of Alice's POVMs, and $m_B$ the number of Bob's POVMs. Then, the formulation used by @Winick_Lütkenhaus_Coles_2018 has the number of constraints equal to $m_A m_B n$. For the given BB84 example with $n$ qubits, this would give $20n$ constraints. The fact that the number of constraints is significantly smaller than the size of the variable motivates a dual problem approach.  -->






